<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1112.1434                               -->
<workbook source-build='2021.3.4 (20213.21.1112.1434)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='02_olympics_countries' inline='true' name='federated.1mwinx91l9062k194qv5q0obvf36' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='02_olympics_countries' name='textscan.16sogts0zwt60v114efqw0kqbg5x'>
            <connection class='textscan' directory='C:/Users/pc/Downloads' filename='02_olympics_countries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.16sogts0zwt60v114efqw0kqbg5x' name='02_olympics_countries.csv' table='[02_olympics_countries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='it_IT' separator='&#9;'>
            <column datatype='string' name='Edition' ordinal='0' />
            <column datatype='string' name='Discipline' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Gender' ordinal='3' />
            <column datatype='string' name='Medal' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.16sogts0zwt60v114efqw0kqbg5x' name='02_olympics_countries.csv' table='[02_olympics_countries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='it_IT' separator='&#9;'>
            <column datatype='string' name='Edition' ordinal='0' />
            <column datatype='string' name='Discipline' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Gender' ordinal='3' />
            <column datatype='string' name='Medal' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[02_olympics_countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;it&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;it_IT&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Edition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Edition]</local-name>
            <parent-name>[02_olympics_countries.csv]</parent-name>
            <remote-alias>Edition</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discipline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Discipline]</local-name>
            <parent-name>[02_olympics_countries.csv]</parent-name>
            <remote-alias>Discipline</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[02_olympics_countries.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[02_olympics_countries.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[02_olympics_countries.csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='02_olympics_countries.csv' datatype='table' name='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Medal:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Great Britain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;\#N/A&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;International Olympic Committee Mixed teams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australasia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;International Olympic Committee Unified Team&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bohemia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Soviet Union&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chinese Taipei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russian Empire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Independent Olympic Participants&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;British West Indies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yugoslavia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Besik&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;IT&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='02_olympics_countries.csv' id='02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27'>
            <properties context=''>
              <relation connection='textscan.16sogts0zwt60v114efqw0kqbg5x' name='02_olympics_countries.csv' table='[02_olympics_countries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='it_IT' separator='&#9;'>
                  <column datatype='string' name='Edition' ordinal='0' />
                  <column datatype='string' name='Discipline' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Gender' ordinal='3' />
                  <column datatype='string' name='Medal' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Foglio 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='02_olympics_countries' name='federated.1mwinx91l9062k194qv5q0obvf36' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mwinx91l9062k194qv5q0obvf36'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='02_olympics_countries.csv' datatype='integer' name='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' role='measure' type='quantitative' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='02_olympics_countries.csv' datatype='table' name='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <natural-sort column='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk]' direction='ASC' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mwinx91l9062k194qv5q0obvf36].[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1mwinx91l9062k194qv5q0obvf36].[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]</rows>
        <cols>[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{7A0236C5-019D-4366-9516-C49C938C5D74}' />
    </worksheet>
    <worksheet name='Foglio 1 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='02_olympics_countries' name='federated.1mwinx91l9062k194qv5q0obvf36' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mwinx91l9062k194qv5q0obvf36'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='02_olympics_countries.csv' datatype='integer' name='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' role='measure' type='quantitative' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='02_olympics_countries.csv' datatype='table' name='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk]'>
            <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Gold&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk]' direction='ASC' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mwinx91l9062k194qv5q0obvf36].[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1mwinx91l9062k194qv5q0obvf36].[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]</rows>
        <cols>([federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk] / [federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk])</cols>
      </table>
      <simple-id uuid='{CFFEA4B3-DE37-4B9B-A920-E729C58C509C}' />
    </worksheet>
    <worksheet name='Foglio 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='02_olympics_countries' name='federated.1mwinx91l9062k194qv5q0obvf36' />
          </datasources>
          <datasource-dependencies datasource='federated.1mwinx91l9062k194qv5q0obvf36'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Discipline]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='02_olympics_countries.csv' datatype='integer' name='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' role='measure' type='quantitative' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='02_olympics_countries.csv' datatype='table' name='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discipline]' derivation='None' name='[none:Discipline:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk]'>
            <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Gold&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]' direction='DESC' measure-to-sort-by='[federated.1mwinx91l9062k194qv5q0obvf36].[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Discipline:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mwinx91l9062k194qv5q0obvf36].[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]</column>
            <column>[federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1mwinx91l9062k194qv5q0obvf36].[__tableau_internal_object_id__].[cnt:02_olympics_countries.csv_E6EDF8176CA44947923AF729E7D74A27:qk]</rows>
        <cols>([federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk] / ([federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk] / [federated.1mwinx91l9062k194qv5q0obvf36].[none:Discipline:nk]))</cols>
      </table>
      <simple-id uuid='{B15A6126-B5D7-46F3-AD92-C84443965365}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Foglio 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DBBA6BDF-441D-4D6D-B04C-09997D2FD36C}' />
    </window>
    <window class='worksheet' maximized='true' name='Foglio 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D674F61F-F762-4590-99A5-EACF92DEBC09}' />
    </window>
    <window class='worksheet' name='Foglio 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mwinx91l9062k194qv5q0obvf36].[none:Country:nk]</field>
            <field>[federated.1mwinx91l9062k194qv5q0obvf36].[none:Discipline:nk]</field>
            <field>[federated.1mwinx91l9062k194qv5q0obvf36].[none:Medal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93E1BDE3-7044-4A2B-A0C3-58D59C963D11}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Foglio 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Foglio 1 (2)' width='192'>
      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
      09SjQwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Foglio 2' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
